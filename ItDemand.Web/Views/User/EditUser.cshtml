@using ItDemand.Domain.Enums;
@using ItDemand.Domain.Utils;
@model UserViewModel

<div class="container">
    <div class="row mt-3 mb-3">
        <div class="col-md-12">
            <h2 class="h4"><i class="fa-solid fa-user-pen"></i> Edit User</h2>
        </div>
    </div>
    <form method="post" enctype="multipart/form-data" asp-controller="User" asp-action="SaveUser">
        <input type="hidden" name="Id" value="@Model.Id" />
        <div class="card">
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col">
                        <label class="form-label">Display Name</label>
                        <input type="text" name="DisplayName" class="form-control" value="@Model.DisplayName" />
                    </div>
                    <div class="col">
                        <label class="form-label">User Name</label>
                        <input type="text" name="UserName" class="form-control" value="@Model.UserName" readonly />
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Email Address</label>
                        <input type="text" name="Email" class="form-control" value="@Model.Email" />
                    </div>
                    <div class="col">
                    
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="mb-2">Security Roles</div>
                        @foreach (SecurityRole role in Enum.GetValues(typeof(SecurityRole)))
				        {
                            if (role != SecurityRole.None)
                            {
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" value="@role" name="SecurityRole" checked="@(Model.SecurityRole.HasFlag(role))">
                                    <label class="form-check-label">@(role.GetDescription<SecurityRole>())</label>
                                </div>
                            }
                        }
			        </div>
                    <div class="col-md-6">
                        <div class="mb-2">Is User Active?</div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" value="true" name="IsActive" checked="@((Model.IsActive))">
                            <label class="form-check-label">Yes</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" value="false" name="IsActive" checked="@((!Model.IsActive))">
                            <label class="form-check-label">No</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex mt-3" style="gap: 10px;">
            <a class="btn btn-link ms-auto" asp-area="" asp-controller="User" asp-action="Index">Cancel</a>
            <button type="submit" class="btn btn-primary" id="btnSave">Save</button>
        </div>
    </form>
</div>

@*@section scripts {
    <environment include="Development">
        <script src="~/js/manage-users.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/manage-users.min.js" asp-append-version="true"></script>
    </environment>
}*@